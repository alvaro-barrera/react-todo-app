{"version":3,"sources":["Context/TodoContext/index.js","Context/TodoContext/useLocalStorage.js","Components/TodoCounter/TodoCounter.js","Components/TodoSearch/TodoSearch.js","Components/TodoList/TodoList.js","Components/TodoItem/TodoItem.js","Modal/index.js","Components/TodoButtonCreate/TodoButtonCreate.js","TodoForm/TodoForm.js","App/AppUI.js","App/App.js","reportWebVitals.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifyItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodo","todoIndex","findIndex","newTodos","currencyState","deleteTodo","splice","addTodo","unshift","children","TodoCounter","useContext","className","TodoSearch","Fragment","onChange","event","console","log","target","type","placeholder","class","TodoList","TodoItem","onClick","onComplete","onDelete","Modal","ReactDOM","createPortal","id","document","getElementById","TodoButtonCreate","prevState","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","AppUI","map","i","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.8e6809a9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useLocalStorage } from \"./useLocalStorage\";\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider(props) {\r\n  const {\r\n    item: todos,\r\n    saveItem: saveTodos,\r\n    loading,\r\n  } = useLocalStorage(\"TODOS_V1\", []);\r\n  const [searchValue, setSearchValue] = React.useState(\"\");\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n\r\n  const completedTodos = todos.filter((todo) => todo.completed).length;\r\n  const totalTodos = todos.length;\r\n\r\n  let searchedTodos = [];\r\n\r\n  if (searchValue.length > 0) {\r\n    searchedTodos = todos.filter((todo) => {\r\n      let todoText = todo.text.toLowerCase();\r\n      let searchText = searchValue.toLowerCase();\r\n      return todoText.includes(searchText);\r\n    });\r\n  } else {\r\n    searchedTodos = todos;\r\n  }\r\n  const addTodo = (text) => {\r\n    const newTodos = [...todos];\r\n    newTodos.unshift({\r\n      completed: false,\r\n      text,\r\n    });\r\n    saveTodos(newTodos);\r\n  };\r\n  const completeTodo = (text) => {\r\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\r\n    const newTodos = [...todos];\r\n    let currencyState = newTodos[todoIndex].completed;\r\n    newTodos[todoIndex].completed = !currencyState;\r\n    saveTodos(newTodos);\r\n  };\r\n\r\n  const deleteTodo = (text) => {\r\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\r\n    const newTodos = [...todos];\r\n    newTodos.splice(todoIndex, 1);\r\n    saveTodos(newTodos);\r\n  };\r\n  return (\r\n    <TodoContext.Provider\r\n      value={{\r\n        loading,\r\n        searchedTodos,\r\n        totalTodos,\r\n        completedTodos,\r\n        searchValue,\r\n        setSearchValue,\r\n        completeTodo,\r\n        deleteTodo,\r\n        openModal,\r\n        setOpenModal,\r\n        addTodo\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TodoContext.Provider>\r\n  );\r\n}\r\n\r\nexport { TodoContext, TodoProvider };\r\n","import React from \"react\";\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [item, setItem] = React.useState(initialValue);\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => {\r\n      const localStorageItem = localStorage.getItem(itemName);\r\n      let parsedItem;\r\n      if (!localStorageItem) {\r\n        localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n        parsedItem = [];\r\n      } else {\r\n        parsedItem = JSON.parse(localStorageItem);\r\n      }\r\n      setItem(parsedItem);\r\n      setLoading(false);\r\n    }, 1000);\r\n  });\r\n\r\n  const saveItem = (newItem) => {\r\n    const stringifyItem = JSON.stringify(newItem);\r\n    localStorage.setItem(itemName, stringifyItem);\r\n    setItem(newItem);\r\n  };\r\n\r\n  return { item, saveItem, loading };\r\n}\r\n\r\nexport { useLocalStorage };\r\n","import React from \"react\";\r\nimport \"./TodoCounter.css\";\r\nimport { TodoContext } from \"../../Context/TodoContext/index\";\r\n\r\nfunction TodoCounter() {\r\n  const { totalTodos, completedTodos } = React.useContext(TodoContext);\r\n  return (\r\n    <h2 className=\"TodoCounter__subtitle\">\r\n      Completed {completedTodos} of {totalTodos} items\r\n    </h2>\r\n  );\r\n}\r\n\r\nexport { TodoCounter };\r\n","import React from \"react\";\r\nimport \"./TodoSearch.css\";\r\nimport { TodoContext } from \"../../Context/TodoContext/index\";\r\n\r\nfunction TodoSearch() {\r\n  const { searchValue, setSearchValue } = React.useContext(TodoContext);\r\n\r\n  const onChangeSearch = (event) => {\r\n    console.log(event);\r\n    setSearchValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"Search\">\r\n        <input \r\n         onChange={onChangeSearch}\r\n         className=\"\"\r\n         type=\"search\"\r\n         placeholder=\"Search\"\r\n         value={searchValue}/>\r\n        <i class='bx bx-search-alt'></i>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport { TodoSearch };\r\n","import React from \"react\";\r\nimport \"./TodoList.css\";\r\n\r\nfunction TodoList(props) {\r\n  return (\r\n    <section>\r\n        <ul>\r\n            {props.children}\r\n        </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport { TodoList };\r\n","import React from \"react\";\r\nimport \"./TodoItem.css\";\r\n\r\nfunction TodoItem(props) {\r\n  return (\r\n    <li className={`TodoItem__li ${props.completed && \"TodoItem__li--complete\"}`}>\r\n      <span\r\n        onClick={props.onComplete}\r\n        className={`TodoItem__icon TodoItem__icon-check ${\r\n          props.completed && \"TodoItem__icon-check--active\"\r\n        }`}\r\n      >\r\n        <i className='bx bx-badge-check'></i>\r\n      </span>\r\n      <p\r\n        className={`TodoItem__p ${props.completed && \"TodoItem__p--complete\"}`}\r\n      >\r\n        {props.text}\r\n      </p>\r\n      <span\r\n        onClick={props.onDelete}\r\n        className=\"TodoItem__icon TodoItem__icon-delete\"\r\n      >\r\n        <i class='bx bx-trash'></i>\r\n      </span>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport { TodoItem };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.css\";\r\n\r\nfunction Modal({ children }) {\r\n  return ReactDOM.createPortal(\r\n    <div id=\"demo-modal\" class=\"modal\">\r\n      <div class=\"modal__content\">\r\n        {children}\r\n        {/* <a href=\"#\" class=\"modal__close\">\r\n          &times;\r\n        </a> */}\r\n      </div>\r\n    </div>,\r\n\r\n    document.getElementById(\"modal\")\r\n  );\r\n}\r\n\r\nexport { Modal };\r\n","import React from 'react';\r\nimport './TodoButtonCreate.css';\r\n\r\nfunction TodoButtonCreate(props) {\r\n  const handleClick = () => {\r\n    props.setOpenModal(prevState => !prevState);\r\n\r\n  };\r\n  \r\n  return (\r\n    <button\r\n      className=\"TodoButtonCreate\"\r\n      onClick={() => handleClick()}\r\n    >\r\n      +\r\n    </button>\r\n  );\r\n}\r\n\r\nexport { TodoButtonCreate };","import React from \"react\";\r\nimport \"./TodoForm.css\";\r\nimport { TodoContext } from \"../Context/TodoContext\";\r\n\r\nfunction TodoForm() {\r\n  const [newTodoValue, setNewTodoValue] = React.useState(\"\");\r\n  const { addTodo, setOpenModal } = React.useContext(TodoContext);\r\n\r\n  const onChange = (event) => {\r\n    setNewTodoValue(event.target.value);\r\n  };\r\n  const onCancel = () => {\r\n    setOpenModal(false);\r\n  };\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    addTodo(newTodoValue);\r\n    setOpenModal(false);\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <label>Escribe tu nuevo TODO</label>\r\n      <textarea\r\n        value={newTodoValue}\r\n        onChange={onChange}\r\n        placeholder=\"New item\"\r\n      />\r\n      <div className=\"TodoForm-buttonContainer\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"TodoForm-button TodoForm-button--cancel\"\r\n          onClick={onCancel}\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\" className=\"TodoForm-button TodoForm-button--add\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { TodoForm };\r\n","import React from \"react\";\r\nimport { TodoCounter } from \"../Components/TodoCounter/TodoCounter\";\r\nimport { TodoSearch } from \"../Components/TodoSearch/TodoSearch\";\r\nimport { TodoList } from \"../Components/TodoList/TodoList\";\r\nimport { TodoItem } from \"../Components/TodoItem/TodoItem\";\r\nimport { TodoContext } from \"../Context/TodoContext/index\";\r\nimport { Modal } from \"../Modal\";\r\nimport { TodoButtonCreate } from \"../Components/TodoButtonCreate/TodoButtonCreate\";\r\nimport { TodoForm } from \"../TodoForm/TodoForm\";\r\n\r\nfunction AppUI() {\r\n  const {\r\n    loading,\r\n    searchedTodos,\r\n    completeTodo,\r\n    deleteTodo,\r\n    openModal,\r\n    setOpenModal,\r\n  } = React.useContext(TodoContext);\r\n  return (\r\n    <React.Fragment>\r\n      <TodoCounter />\r\n      <TodoSearch />\r\n\r\n      <TodoList>\r\n        {loading && !searchedTodos.length && <p>¡Todo está listo!</p>}\r\n        {searchedTodos.map((todo, i) => (\r\n          <TodoItem\r\n            key={i}\r\n            text={todo.text}\r\n            completed={todo.completed}\r\n            onComplete={() => completeTodo(todo.text)}\r\n            onDelete={() => deleteTodo(todo.text)}\r\n          />\r\n        ))}\r\n      </TodoList>\r\n      {openModal && (\r\n        <Modal>\r\n          <TodoForm />\r\n        </Modal>\r\n      )}\r\n      <TodoButtonCreate setOpenModal={setOpenModal}></TodoButtonCreate>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport { AppUI };\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { AppUI } from \"./AppUI\";\nimport { TodoProvider } from \"../Context/TodoContext/index\";\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}